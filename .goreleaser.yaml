env:
  - GO111MODULE=on
  - CGO_ENABLED=1
  - HOMEBREW_NAME=go-musicfox

builds:
  - id: go-musicfox-linux-amd64
    main: ./cmd/musicfox.go
    binary: musicfox
    env:
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
      - CFLAGS="-I/usr/x86_64-linux-gnu/include $CFLAGS"
      - CPPFLAGS="-I/usr/x86_64-linux-gnu/include $CPPFLAGS"
      - LDFLAGS="-L/usr/x86_64-linux-gnu/lib $LDFLAGS"
      - CGO_LDFLAGS="-L/usr/x86_64-linux-gnu/lib $CGO_LDFLAGS"
      - PKG_CONFIG_PATH=/usr/x86_64-linux-gnu/lib/pkgconfig:$PKG_CONFIG_PATH
    goarch:
      - amd64
    goos:
      - linux
    ldflags:
      - -s -w -X github.com/go-musicfox/go-musicfox/internal/types.AppVersion={{.Tag}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmKey={{.Env.LASTFM_KEY}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmSecret={{.Env.LASTFM_SECRET}}
  - id: go-musicfox-linux-arm64
    main: ./cmd/musicfox.go
    binary: musicfox
    goarch:
      - arm64
    goos:
      - linux
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
      - CFLAGS="-I/usr/aarch64-linux-gnu/include $CFLAGS"
      - CPPFLAGS="-I/usr/aarch64-linux-gnu/include $CPPFLAGS"
      - LDFLAGS="-L/usr/aarch64-linux-gnu/lib $LDFLAGS"
      - CGO_LDFLAGS="-L/usr/aarch64-linux-gnu/lib $CGO_LDFLAGS"
      - PKG_CONFIG_PATH=/usr/aarch64-linux-gnu/lib/pkgconfig:$PKG_CONFIG_PATH
    ldflags:
      - -s -w -X github.com/go-musicfox/go-musicfox/internal/types.AppVersion={{.Tag}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmKey={{.Env.LASTFM_KEY}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmSecret={{.Env.LASTFM_SECRET}}
  - id: go-musicfox-linux-arm
    main: ./cmd/musicfox.go
    binary: musicfox
    goarch:
      - arm
    goos:
      - linux
    env:
      - CC=arm-linux-gnueabi-gcc
      - CXX=arm-linux-gnueabi-g++
      - CFLAGS="-I/usr/arm-linux-gnueabi/include $CFLAGS"
      - CPPFLAGS="-I/usr/arm-linux-gnueabi/include $CPPFLAGS"
      - LDFLAGS="-L/usr/arm-linux-gnueabi/lib $LDFLAGS"
      - CGO_LDFLAGS="-L/usr/arm-linux-gnueabi/lib $CGO_LDFLAGS"
      - PKG_CONFIG_PATH=/usr/arm-linux-gnueabi/lib/pkgconfig:$PKG_CONFIG_PATH
    ldflags:
      - -s -w -X github.com/go-musicfox/go-musicfox/internal/types.AppVersion={{.Tag}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmKey={{.Env.LASTFM_KEY}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmSecret={{.Env.LASTFM_SECRET}}
  - id: go-musicfox-windows-amd64
    main: ./cmd/musicfox.go
    binary: musicfox
    goarch:
      - amd64
    goos:
      - windows
    ldflags:
      - -s -w -X github.com/go-musicfox/go-musicfox/internal/types.AppVersion={{.Tag}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmKey={{.Env.LASTFM_KEY}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmSecret={{.Env.LASTFM_SECRET}}
    tags:
      - enable_global_hotkey
    env:
      - CC=/usr/local/mingw/bin/x86_64-w64-mingw32-gcc
      - CXX=/usr/local/mingw/bin/x86_64-w64-mingw32-g++
      - CFLAGS="-I/usr/local/mingw/x86_64-w64-mingw32/include $CFLAGS"
      - CPPFLAGS="-I/usr/local/mingw/x86_64-w64-mingw32/include $CPPFLAGS"
      - LDFLAGS="-L/usr/local/mingw/x86_64-w64-mingw32/lib $LDFLAGS"
      - CGO_LDFLAGS="-L/usr/local/mingw/x86_64-w64-mingw32/lib $CGO_LDFLAGS"
  - id: go-musicfox-windows-arm64
    main: ./cmd/musicfox.go
    binary: musicfox
    goarch:
      - arm64
    goos:
      - windows
    ldflags:
      - -s -w -X github.com/go-musicfox/go-musicfox/internal/types.AppVersion={{.Tag}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmKey={{.Env.LASTFM_KEY}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmSecret={{.Env.LASTFM_SECRET}}
    tags:
      - enable_global_hotkey
    env:
      - CC=/usr/local/mingw/bin/aarch64-w64-mingw32-gcc
      - CXX=/usr/local/mingw/bin/aarch64-w64-mingw32-g++
      - CFLAGS="-I/usr/local/mingw/aarch64-w64-mingw32/include $CFLAGS"
      - CPPFLAGS="-I/usr/local/mingw/aarch64-w64-mingw32/include $CPPFLAGS"
      - LDFLAGS="-L/usr/local/mingw/aarch64-w64-mingw32/lib $LDFLAGS"
      - CGO_LDFLAGS="-L/usr/local/mingw/aarch64-w64-mingw32/lib $CGO_LDFLAGS"
  - id: go-musicfox-darwin-arm64
    main: ./cmd/musicfox.go
    binary: musicfox
    goarch:
      - arm64
    goos:
      - darwin
    ldflags:
      - -s -w -X github.com/go-musicfox/go-musicfox/internal/types.AppVersion={{.Tag}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmKey={{.Env.LASTFM_KEY}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmSecret={{.Env.LASTFM_SECRET}}
    tags:
      - enable_global_hotkey
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
  - id: go-musicfox-darwin-amd64
    main: ./cmd/musicfox.go
    binary: musicfox
    goarch:
      - amd64
    goos:
      - darwin
    ldflags:
      - -s -w -X github.com/go-musicfox/go-musicfox/internal/types.AppVersion={{.Tag}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmKey={{.Env.LASTFM_KEY}} -X github.com/go-musicfox/go-musicfox/internal/types.LastfmSecret={{.Env.LASTFM_SECRET}}
    tags:
      - enable_global_hotkey
    env:
      - CC=o64-clang
      - CXX=o64-clang++

archives:
  - id: musicfox
    builds:
      - go-musicfox-linux-amd64
      - go-musicfox-linux-arm64
      - go-musicfox-linux-arm
      - go-musicfox-windows-amd64
      - go-musicfox-windows-arm64
      - go-musicfox-darwin-amd64
      - go-musicfox-darwin-arm64
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: true
    format: zip
    files:
      - none*

nfpms:
  - id: go-musicfox
    package_name: go-musicfox
    builds:
      - go-musicfox-linux-amd64
      - go-musicfox-linux-arm64
      - go-musicfox-linux-arm
    maintainer: anhoder <anhoder@88.com>
    description: A music player for netease music in terminal.
    vendor: go-musicfox
    homepage: https://github.com/go-musicfox/go-musicfox
    license: MIT
    formats:
      - apk
      - deb
      - rpm
      - archlinux
    dependencies:
      - flac
    contents:
      - src: "{{ .ArtifactPath }}"
        dst: /usr/local/bin/musicfox
    overrides:
      deb:
        dependencies:
          - flac
          - libasound2-dev

changelog:
  use: git
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: "Optimize"
      regexp: '^.*?optimize(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: "Docs"
      regexp: ".*docs.*"
      order: 3
    - title: "CI"
      regexp: '(.*build.*)|(^ci(\([[:word:]]+\))??!?:.+$)'
      order: 4
    - title: Others
      order: 999

brews:
  - name: "{{ .Env.HOMEBREW_NAME }}"
    repository:
      owner: go-musicfox
      name: homebrew-go-musicfox
      token: "{{ .Env.HOMEBREW_TAP_TOKEN }}"
    url_template: "https://github.com/go-musicfox/go-musicfox/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    homepage: "https://github.com/go-musicfox/go-musicfox"
    description: "go-musicfox是musicfox的重写版，使用Go编写的网易云音乐命令行程序。"
    commit_author:
      name: anhoder
      email: anhoder@88.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    custom_block: |
      head "https://github.com/go-musicfox/go-musicfox.git"
      depends_on "go" => :build if build.head?
    install: |
      system 'echo', '-e', "\033[1;33m给个star✨吧~\033[0m \033[4;36mhttps://github.com/go-musicfox/go-musicfox \033[0m"
      if build.head?
        if OS.mac?
          system "make build BUILD_TAGS='enable_global_hotkey' GOBINARY=" + ENV["HOMEBREW_PREFIX"] + "/bin/go"
        else
          system "make build GOBINARY=" + ENV["HOMEBREW_PREFIX"] + "/bin/go"
        end
        bin.install 'bin/musicfox'
      else
        bin.install 'musicfox'
      end

winget:
  - name: go-musicfox
    publisher: go-musicfox
    short_description: "A netease music player in terminal."
    license: "MIT"
    publisher_url: https://github.com/go-musicfox/go-musicfox
    publisher_support_url: "https://github.com/go-musicfox/go-musicfox/issues/new"
    package_identifier: go-musicfox.go-musicfox
    url_template: "https://github.com/go-musicfox/go-musicfox/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    commit_author:
      name: anhoder
      email: anhoder@88.com
    commit_msg_template: "{{ .PackageIdentifier }}: {{ .Tag }}"
    homepage: "https://github.com/go-musicfox/go-musicfox"
    description: "A netease music player in terminal."
    skip_upload: auto
    release_notes: "{{.Changelog}}"
    tags:
      - golang
      - cli
      - netease music
      - musicfox
    repository:
      owner: go-musicfox
      name: winget-pkgs
      branch: "{{.ProjectName}}-{{.Version}}"
      token: "{{ .Env.GITHUB_TOKEN }}"
      # pull_request:
      #   enabled: true
      #   draft: true
      #   base:
      #     owner: microsoft
      #     name: winget-pkgs
      #     branch: master

# goreleaser支持的配置不多，暂时不用
#scoop:
#  url_template: "https://github.com/go-musicfox/go-musicfox/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
#  bucket:
#    owner: go-musicfox
#    name: go-musicfox
#  folder: deploy/scoop
#
#  commit_author:
#    name: anhoder
#    email: anhoder@88.com
#
#  commit_msg_template: "Scoop update for {{ .ProjectName }} version {{ .Tag }}"
#  homepage: "https://github.com/go-musicfox/go-musicfox"
#  description: "go-musicfox是用Go写的又一款网易云音乐命令行客户端，支持UnblockNeteaseMusic、各种音质级别、lastfm、MPRIS..."
#  license: MIT
#
#  post_install: ["Write-Host '好用记得给go-musicfox一个star✨哦~'"]

release:
  github:
    owner: go-musicfox
    name: go-musicfox
  extra_files:
    - glob: ./dist/*.apk
    - glob: ./dist/*.deb
    - glob: ./dist/*.pkg.tar.zst
    - glob: ./dist/*.rpm
  discussion_category_name: General
  prerelease: auto
  mode: replace
  draft: false
  include_meta: false
