# go-musicfox v2 Kubernetes部署配置
# 支持微内核插件架构的云原生部署

apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-musicfox
  namespace: musicfox
  labels:
    app: go-musicfox
    version: v2
    component: core
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: go-musicfox
  template:
    metadata:
      labels:
        app: go-musicfox
        version: v2
        component: core
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: go-musicfox
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: go-musicfox
        image: ghcr.io/go-musicfox/go-musicfox:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: rpc
          containerPort: 8081
          protocol: TCP
        - name: plugin
          containerPort: 8082
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: MUSICFOX_ENV
          value: "production"
        - name: MUSICFOX_LOG_LEVEL
          value: "info"
        - name: MUSICFOX_CONFIG_DIR
          value: "/app/config"
        - name: MUSICFOX_PLUGIN_DIR
          value: "/app/plugins"
        - name: MUSICFOX_DATA_DIR
          value: "/app/data"
        - name: MUSICFOX_LOG_DIR
          value: "/app/logs"
        - name: MUSICFOX_REDIS_URL
          valueFrom:
            secretKeyRef:
              name: go-musicfox-secrets
              key: redis-url
        - name: MUSICFOX_DB_URL
          valueFrom:
            secretKeyRef:
              name: go-musicfox-secrets
              key: database-url
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: plugins
          mountPath: /app/plugins
          readOnly: true
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
      # 插件管理器边车容器
      - name: plugin-manager
        image: ghcr.io/go-musicfox/plugin-manager:latest
        imagePullPolicy: Always
        ports:
        - name: plugin-mgr
          containerPort: 9091
          protocol: TCP
        env:
        - name: MUSICFOX_ENV
          value: "production"
        - name: MUSICFOX_LOG_LEVEL
          value: "info"
        - name: MUSICFOX_PLUGIN_DIR
          value: "/app/plugins"
        - name: PLUGIN_REGISTRY_URL
          valueFrom:
            configMapKeyRef:
              name: go-musicfox-config
              key: plugin-registry-url
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: plugin-mgr
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: plugin-mgr
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: plugins
          mountPath: /app/plugins
        - name: logs
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: go-musicfox-config
          defaultMode: 0644
      - name: plugins
        persistentVolumeClaim:
          claimName: go-musicfox-plugins
      - name: data
        persistentVolumeClaim:
          claimName: go-musicfox-data
      - name: logs
        emptyDir:
          sizeLimit: 1Gi
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - go-musicfox
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: go-musicfox
  namespace: musicfox
  labels:
    app: go-musicfox
    version: v2
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: rpc
    port: 8081
    targetPort: rpc
    protocol: TCP
  - name: plugin
    port: 8082
    targetPort: plugin
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: go-musicfox

---
apiVersion: v1
kind: Service
metadata:
  name: go-musicfox-headless
  namespace: musicfox
  labels:
    app: go-musicfox
    version: v2
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: rpc
    port: 8081
    targetPort: rpc
    protocol: TCP
  - name: plugin
    port: 8082
    targetPort: plugin
    protocol: TCP
  selector:
    app: go-musicfox

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: go-musicfox
  namespace: musicfox
  labels:
    app: go-musicfox
    version: v2
automountServiceAccountToken: false

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: go-musicfox-config
  namespace: musicfox
  labels:
    app: go-musicfox
    version: v2
data:
  config.yaml: |
    # go-musicfox v2 配置文件
    server:
      host: "0.0.0.0"
      port: 8080
      rpc_port: 8081
      plugin_port: 8082
      metrics_port: 9090
    
    log:
      level: "info"
      format: "json"
      output: "stdout"
    
    database:
      type: "postgres"
      # URL从环境变量获取
    
    redis:
      # URL从环境变量获取
    
    plugins:
      enabled: true
      directory: "/app/plugins"
      hot_reload: true
      types:
        - "shared"
        - "rpc"
        - "wasm"
        - "hotload"
    
    security:
      enable_cors: true
      cors_origins:
        - "*"
      rate_limit:
        enabled: true
        requests_per_minute: 100
    
    monitoring:
      enabled: true
      metrics_path: "/metrics"
      health_path: "/health"
      ready_path: "/ready"
  
  plugins.yaml: |
    # 插件配置
    registry:
      url: "https://plugins.go-musicfox.com"
      timeout: 30s
    
    auto_update:
      enabled: false
      interval: "24h"
    
    security:
      verify_signatures: true
      allowed_sources:
        - "https://plugins.go-musicfox.com"
        - "https://github.com/go-musicfox"
  
  plugin-registry-url: "https://plugins.go-musicfox.com"

---
apiVersion: v1
kind: Secret
metadata:
  name: go-musicfox-secrets
  namespace: musicfox
  labels:
    app: go-musicfox
    version: v2
type: Opaque
data:
  # Base64编码的连接字符串
  # 实际部署时需要替换为真实值
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzk=  # redis://redis-service:6379
  database-url: cG9zdGdyZXM6Ly91c2VyOnBhc3N3b3JkQHBvc3RncmVzLXNlcnZpY2U6NTQzMi9tdXNpY2ZveD9zc2xtb2RlPWRpc2FibGU=  # postgres://user:password@postgres-service:5432/musicfox?sslmode=disable

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: go-musicfox-data
  namespace: musicfox
  labels:
    app: go-musicfox
    version: v2
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: go-musicfox-plugins
  namespace: musicfox
  labels:
    app: go-musicfox
    version: v2
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: shared-storage